def is_criticality_balanced(temperature, neutrons_emitted):
    """function return if the criticality is balanced."""

    return temperature < 800.00 and neutrons_emitted > 500.00 and temperature * neutrons_emitted < 500000


def reactor_efficiency(voltage, current, theoretical_max_power):
    """Funciton returns the reactor efficiency zone """

    generated_power = voltage * current
    percentage_value = (generated_power / theoretical_max_power) * 100
    if percentage_value >= 80:
        return "green"
    if percentage_value >= 60:
        return "orange"
    if 60 > percentage_value >= 30:
        return "red"

    return "black"


def fail_safe(temperature, neutrons_produced_per_second, threshold):
    """Function Assesses and returns status code for the reactor"""
    
    threshold_ten = int(threshold * 0.10)
    plus = threshold + threshold_ten
    minus = threshold - threshold_ten
    plus_threshold = range(threshold, plus+1)
    minus_threshold = range(threshold, minus+1, -1)
    if temperature * neutrons_produced_per_second < 0.90 * threshold:
        return "LOW"
    if temperature * neutrons_produced_per_second in plus_threshold or temperature * neutrons_produced_per_second in minus_threshold:
        return "NORMAL"

    return "DANGER"
